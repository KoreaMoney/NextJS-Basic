@Date Nov 2023
@Author Kim Dowon
@Description NextJS의 기본적인 사용방법과 구조형식을 작성합니다.
---------------------------------------------------------------
👉 프로젝트 구조
- scr폴더 안에는 app폴더가 있고 app폴더 안에는 pages
- dependencies의 node_modules
- 외부에 노출되는 public
- eslint규칙을 정의할 수 있는 eslintrc.json파일
- git에 commit하지 말아야 할 것
- next-env.d.ts는 수정하지 말아야 한다.
- next가 읽어가는 경로를 보여주는 next.config파일
- react에서 볼 수 있는 package.json파일

👉 NextJS실행하기 (package.json파일 파악도 해보기)

 "scripts": {
    "dev": "next dev", - 개발용 모드
    "build": "next build", - 서버에 배포한 뒤에 프로젝트를 빌드할 때
    "start": "next start", - 서버에 배포한 뒤 빌드 후 실행할 때 사용
    "lint": "next lint" - 프로젝트 소스코드를 검사할 때 사용 (EsLint)
  },

  - yarn dev로 실행하기

👉 NextJS에서 구성하는 기본적인 내용
 1. app폴더에 page라는 폴더를 만들면 routing이 자동으로 진행된다.
 2. build
    - yarn build
    - app폴더 안에 어떤 폴더들이 route되어 있는지 확인 가능하고 크기가 얼마인지 알 수 있다.
    - 처음으로 load되는 Javascript의 크기도 알 수 있다.
    - SSG으로 되어 있는지 SSR인지 ISR인지 CSR인지도 확인할 수 있다.
    - build이후에는 yarn start로 시작하면 된다.
 3. 정적 Routing
    - pages안에 있는 파일을 routing하고 싶다면 app폴더에 pages의 해당하는 것을 폴더를 만들고 그 안에 page.tsx를 생성하여 routing처리하게 한다.
    - web에서 /about을 하면 어떤 사람이던지 항상 같은 페이지가 라우팅되는 것을 말한다.
 4. 동적 Routing
    - 수많은 페이지들이 존재하여 각각의 페이지들을 전부 정적으로 만든다면, 너무 힘들기 때문에 제품 페이지별로 해당하는 항목이 들어가면 페이지가 이동되게 하기 위해 만들어 졌다.
    - []를 사용해서 대괄호 안에는 사용하고 싶은 keyword아무거나 사용해도 된다.(일반적으로 slug를 많이 작성한다.)
    - 동적 route의 결과를 update해줘야 하는데 여기에서 nextJS는 자동으로 component에 prop으로 데이터를 주기 때문이다.
 5. 페이지 미리 생성하기 (SSG)
    - generateStaticParams 함수를 사용해서 미리 page를 만들어 놓는다.
    - 